<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>